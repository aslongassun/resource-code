/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-03-26 20:30:19 UTC)
 * on 2015-06-29 at 11:05:30 UTC 
 * Modify at your own risk.
 */

package com.vmcop.simplethird.findlover.profileinfoendpoint.model;

/**
 * Model definition for ProfileInfo.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the profileinfoendpoint. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class ProfileInfo extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String birthday;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String profileId;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String urlImageProfile;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Integer userAge;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userName;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String userSex;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getBirthday() {
    return birthday;
  }

  /**
   * @param birthday birthday or {@code null} for none
   */
  public ProfileInfo setBirthday(java.lang.String birthday) {
    this.birthday = birthday;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getProfileId() {
    return profileId;
  }

  /**
   * @param profileId profileId or {@code null} for none
   */
  public ProfileInfo setProfileId(java.lang.String profileId) {
    this.profileId = profileId;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUrlImageProfile() {
    return urlImageProfile;
  }

  /**
   * @param urlImageProfile urlImageProfile or {@code null} for none
   */
  public ProfileInfo setUrlImageProfile(java.lang.String urlImageProfile) {
    this.urlImageProfile = urlImageProfile;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Integer getUserAge() {
    return userAge;
  }

  /**
   * @param userAge userAge or {@code null} for none
   */
  public ProfileInfo setUserAge(java.lang.Integer userAge) {
    this.userAge = userAge;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUserName() {
    return userName;
  }

  /**
   * @param userName userName or {@code null} for none
   */
  public ProfileInfo setUserName(java.lang.String userName) {
    this.userName = userName;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getUserSex() {
    return userSex;
  }

  /**
   * @param userSex userSex or {@code null} for none
   */
  public ProfileInfo setUserSex(java.lang.String userSex) {
    this.userSex = userSex;
    return this;
  }

  @Override
  public ProfileInfo set(String fieldName, Object value) {
    return (ProfileInfo) super.set(fieldName, value);
  }

  @Override
  public ProfileInfo clone() {
    return (ProfileInfo) super.clone();
  }

}
